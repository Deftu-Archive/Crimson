/*
 * Crimson - The ultimate Minecraft library mod
 * Copyright (C) 2021 Qalcyo
 *
 * Crimson is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 2.1 of the License, or
 * (at your option) any later version.
 *
 * Crimson is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with Crimson. If not, see <https://www.gnu.org/licenses/>.
 */

buildscript {
    repositories {
        maven {
            url = 'https://maven.minecraftforge.net/'
        }
        maven {
            url = 'https://jitpack.io/'
        }
        maven {
            url = 'https://repo.spongepowered.org/maven/'
        }
    }
    dependencies {
        classpath('com.github.ReplayMod:ForgeGradle:ceb83c0:all')
        classpath('dev.isXander:MixinGradle:0.6-SNAPSHOT')
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'java'

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

minecraft {
    version = '1.8.9-11.15.1.2318-1.8.9'
    mappings = 'stable_22'

    runDir = 'run'
    clientRunArgs += '--tweakClass xyz.qalcyo.requisite.core.dev.RequisiteDeveloperTweaker'
}

repositories {
    maven {
        name = 'SpongePowered'
        url = 'https://repo.spongepowered.org/maven/'
    }
}

dependencies {
    shade(project(':core')) {
        exclude module: 'Elementa'
        exclude module: 'UniversalCraft'
    }

    shade('gg.essential:elementa-1.8.9-forge:391')

    shade('org.spongepowered:mixin:0.7.11-SNAPSHOT')
    annotationProcessor('org.spongepowered:mixin:0.7.11-SNAPSHOT')
}

processResources {
    inputs.property "version", project.version

    filesMatching("mcmod.info") {
        expand "version": project.version
    }
    rename '(.+_at.cfg)', 'META-INF/$1'
}

mixin {
    disableRefMapWarning = true
    add(sourceSets.main, 'mixins.requisite.refmap.json')
}

sourceSets {
    main {
        ext.refMap = "mixins.requisite.refmap.json"
    }
}

reobfJar {
    archivesBaseName = project_name
    version = project_version
}

task moveResources {
    doLast {
        try {
            ant.move file: "${buildDir}/resources/main", todir: "${buildDir}/classes/java"
        } catch (Exception ignored) {
        }
    }
}

classes.dependsOn(moveResources)
